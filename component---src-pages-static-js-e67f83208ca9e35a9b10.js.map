{"version":3,"sources":["webpack://mask-map/./src/store/maskProvider.js","webpack://mask-map/./src/components/markerGroup.js","webpack://mask-map/./src/components/map.js","webpack://mask-map/./src/components/list.js","webpack://mask-map/./src/components/sidebar.js","webpack://mask-map/./src/store/provider.js","webpack://mask-map/./src/pages/static.js"],"names":["MaskProvider","createContext","children","allMaskdataJson","useStaticQuery","filter","useContext","FilterProvider","geoJson","nodes","useState","store","setStore","all","length","adult","item","properties","mask_adult","mask_child","Provider","value","map","useLeaflet","window","iconUrl","source","allFile","getIconUrl","shadow","orange","red","green","disableClusteringAtZoom","GeoJSON","key","data","pointToLayer","feature","latlng","total","L","icon","createIcon","shadowUrl","onEachFeature","layer","bindPopup","popup","init","lat","lng","mapRef","useRef","setVisibleData","bounds","_southWest","_northEast","visibleData","features","geometry","coordinates","getBounds","handleMoveEnd","e","target","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","current","leafletElement","flyTo","useMemo","Container","zoom","zoomControl","maxZoom","minZoom","center","onmoveend","ref","ZoomControl","Z","WMSTileLayer","attribution","url","styled","Map","text","TextProvider","num","setNum","list","forEach","name","address","indexOf","exist","push","id","loadMoreButton","Button","onClick","prev","slice","toggle","setToggle","theme","props","title"],"mappings":"0OAIaA,GAAeC,qBAE5B,WAAe,GAAmB,IAAhBC,EAAe,EAAfA,SACRC,GAAoBC,oBAAe,cAAnCD,gBA4BAE,GAAWC,gBAAWC,KAAtBF,OAEDG,EAAWL,EAAgBM,MAAlC,GAEA,GAAwBC,cAAS,IAA5BC,EAAL,KAAYC,EAAZ,KAUA,OARKP,EAAOQ,KAAOF,EAAMG,OAAS,IAE9BH,EADEN,EAAOU,MACDJ,EAAMN,QAAO,SAAAW,GAAI,OAAIA,EAAKC,WAAWC,WAAa,KAElDP,EAAMN,QAAO,SAAAW,GAAI,OAAIA,EAAKC,WAAWE,WAAa,MAK5D,gBAACnB,EAAaoB,SAAd,CAAuBC,MAAO,CAAEV,QAAOC,WAAUJ,YAC9CN,I,qECxCP,aACE,IAAQoB,GAAQC,UAARD,IACRE,OAAOF,IAAMA,EAEb,IAgBIG,EAfgBC,GAChBtB,oBAAe,cADjBuB,QAAWlB,MAYb,GAAuCmB,OAAWF,GAA1CG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,IAAKC,EAA7B,EAA6BA,MAErBxB,GAAYF,gBAAWN,GAAvBQ,QA8BR,OACE,gBAAC,IAAD,CAAoByB,wBAAyB,IAC3C,gBAACC,EAAA,EAAD,CACEC,IAAI,UACJC,KAAM5B,EACN6B,aAhCmB,SAACC,EAASC,GACjC,MAAmCD,EAAQrB,WAErCuB,EAFN,EAAQtB,WAAR,EAAoBC,WAcpB,OATEM,EADEe,GAAS,IACDV,EAEAC,EAGE,IAAVS,IACFf,EAAUO,GAGLS,WAASF,EAAQ,CACtBG,MAAMC,OAAW,CACflB,UACAmB,UAAWf,OAeXgB,cAVgB,SAACP,EAASQ,GAC9BA,EAAMC,WAAUC,OAAMV,EAAQrB,kBClD5BgC,EAAO,CACXC,IAAK,UACLC,IAAK,YAgBP,aACE,OAA8B7C,gBAAWN,GAAjCY,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,QACZ4C,GAASC,cAETC,EAAiB,SAAAC,GACrB,IAAQC,EAA2BD,EAA3BC,WAAYC,EAAeF,EAAfE,WAEdC,EApBQ,SAAClD,EAASgD,EAAYC,GACtC,OAAOjD,EAAQmD,SAAStD,QAAO,SAAAW,GAC7B,MAAmBA,EAAK4C,SAASC,YAA1BV,EAAP,KAAYD,EAAZ,KAEA,OACEA,EAAMM,EAAWN,KACjBC,EAAMK,EAAWL,KACjBD,EAAMO,EAAWP,KACjBC,EAAMM,EAAWN,OAYCW,CAAUtD,EAASgD,EAAYC,GAEnD7C,EAAS8C,IAGLK,EAAgB,SAAAC,GACpBV,EAAeU,EAAEC,OAAOH,cAiB1B,OAdAI,gBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAAAC,GACvC,MAAgCA,EAASC,OAAjCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElBrB,EAAOsB,QAAQC,eAAeC,MAAM,IAAInC,YAAS+B,EAAUC,SAG5D,KAEHP,gBAAU,WACRZ,EAAeF,EAAOsB,QAAQC,eAAeb,eAE5C,KAEIe,cACL,kBACE,gBAACC,EAAD,CACEC,KAAM,GACNC,aAAa,EACbC,QAAS,GACTC,QAAS,GACTC,OAAQlC,EACRmC,UAAWrB,EACXsB,IAAKjC,GAEL,gBAACkC,EAAAC,EAAD,CAAajB,SAAS,aACtB,gBAACkB,EAAA,EAAD,CACEC,YAAW,iFACXC,IAAI,qEAGN,gBAAC,EAAD,SAIJ,KAIEZ,GAAYa,QAAOC,KAAV,qEAAGD,CAAH,mD,wCCzEf,aACE,IAAQhF,GAAUL,gBAAWN,GAArBW,MACAkF,GAASvF,gBAAWwF,KAApBD,KACR,GAAsBnF,cAAS,GAAxBqF,EAAP,KAAYC,EAAZ,KACIC,EAAO,GAYXtF,EAAMuF,SAAQ,SAAAlF,GACZ,IAPY,SAAAA,GACZ,MAA0BA,EAAKC,WAAvBkF,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OAA+B,IAAxBD,EAAKE,QAAQR,KAA2C,IAA3BO,EAAQC,QAAQR,GAIhDS,CAAMtF,GAAV,CAIA,MAAmBA,EAAK4C,SAASC,YAA1BV,EAAP,KAAYD,EAAZ,KAEA+C,EAAKM,KACH,gBAAC,IAAD,CACEtF,WAAYD,EAAKC,WACjB4C,YAAa,CAACX,EAAKC,GACnBhB,IAAKnB,EAAKC,WAAWuF,UAK3B,IAAMC,EACJV,EAAM,EAAIE,EAAKnF,OACb,gBAAC4F,EAAD,CAAQC,QA5BO,WACbhG,EAAMG,OAAS,IAAIkF,GAAO,SAAAY,GAAI,OAAIA,EAAO,QA2B3C,QACE,KAEN,OACE,gBAAC,EAAD,KACGX,EAAKY,MAAM,EAAGd,GACdU,IAKD3B,EAAYa,oBAAH,2DAAGA,CAAH,oaAyBTe,EAASf,oBAAH,wDAAGA,CAAH,4F,UCpEZ,aACE,OAA4BjF,eAAS,GAA9BoG,EAAP,KAAeC,EAAf,KAEA,OACE,gBAAC,KAAD,CAAeC,MAAO,CAAEF,WACtB,gBAAC,EAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,EAAD,OAEF,gBAAC,IAAD,CAAQC,UAAWA,OAMrBjC,EAAYa,oBAAH,0DAAGA,CAAH,obAWE,SAAAsB,GAAK,OAChBA,EAAMD,MAAMF,OAAS,oBAAsB,mBClCjD,WAAe,GAAmB,IAAhB5G,EAAe,EAAfA,SAChB,OACE,gBAAC,IAAD,KACE,gBAAC,EAAD,KAAeA,K,UCarB,EAZkB,WAChB,OACE,gBAAC,IAAD,KACE,gBAAC,EAAD,KACE,gBAAC,IAAD,CAAKgH,MAAM,aACX,gBAAC,EAAD,MACA,gBAAC,EAAD","file":"component---src-pages-static-js-e67f83208ca9e35a9b10.js","sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { FilterProvider } from \"./filterProvider\";\n\nexport const MaskProvider = createContext();\n\nexport default ({ children }) => {\n  const { allMaskdataJson } = useStaticQuery(graphql`\n    {\n      allMaskdataJson {\n        nodes {\n          type\n          features {\n            type\n            properties {\n              address\n              available\n              mask_adult\n              mask_child\n              name\n              note\n              phone\n              updated\n              id\n            }\n            geometry {\n              coordinates\n              type\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { filter } = useContext(FilterProvider);\n\n  const [geoJson] = allMaskdataJson.nodes;\n\n  let [store, setStore] = useState([]);\n\n  if (!filter.all && store.length > 0) {\n    if (filter.adult) {\n      store = store.filter(item => item.properties.mask_adult > 0);\n    } else {\n      store = store.filter(item => item.properties.mask_child > 0);\n    }\n  }\n\n  return (\n    <MaskProvider.Provider value={{ store, setStore, geoJson }}>\n      {children}\n    </MaskProvider.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { MaskProvider } from \"../store/maskProvider\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { useLeaflet, GeoJSON } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport L from \"leaflet\";\nimport { createIcon, getIconUrl } from \"./icon\";\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\nimport { popup } from \"./popup\";\nimport \"../style/popup.css\";\n\nexport default () => {\n  const { map } = useLeaflet();\n  window.map = map;\n\n  const {\n    allFile: { nodes: source }\n  } = useStaticQuery(graphql`\n    {\n      allFile(filter: { name: { regex: \"/marker/\" } }) {\n        nodes {\n          name\n          publicURL\n        }\n      }\n    }\n  `);\n\n  const { shadow, orange, red, green } = getIconUrl(source);\n\n  const { geoJson } = useContext(MaskProvider);\n  let iconUrl;\n\n  const createCustomIcon = (feature, latlng) => {\n    const { mask_adult, mask_child } = feature.properties;\n\n    const total = mask_adult + mask_child;\n\n    if (total >= 100) {\n      iconUrl = orange;\n    } else {\n      iconUrl = red;\n    }\n\n    if (total === 0) {\n      iconUrl = green;\n    }\n\n    return L.marker(latlng, {\n      icon: createIcon({\n        iconUrl,\n        shadowUrl: shadow\n      })\n    });\n  };\n\n  const onEachFeature = (feature, layer) => {\n    layer.bindPopup(popup(feature.properties));\n  };\n\n  return (\n    <MarkerClusterGroup disableClusteringAtZoom={17}>\n      <GeoJSON\n        key=\"geoJson\"\n        data={geoJson}\n        pointToLayer={createCustomIcon}\n        onEachFeature={onEachFeature}\n      />\n    </MarkerClusterGroup>\n  );\n};\n","import React, { useContext, useEffect, useRef, useMemo } from \"react\";\nimport { Map, ZoomControl, WMSTileLayer } from \"react-leaflet\";\nimport styled from \"styled-components\";\nimport { MaskProvider } from \"../store/maskProvider\";\nimport MarkerGroup from \"./markerGroup\";\nimport L from \"leaflet\";\n\nconst init = {\n  lat: 25.045655,\n  lng: 121.536456\n};\n\nconst getBounds = (geoJson, _southWest, _northEast) => {\n  return geoJson.features.filter(item => {\n    const [lng, lat] = item.geometry.coordinates;\n\n    return (\n      lat > _southWest.lat &&\n      lng > _southWest.lng &&\n      lat < _northEast.lat &&\n      lng < _northEast.lng\n    );\n  });\n};\n\nexport default () => {\n  const { setStore, geoJson } = useContext(MaskProvider);\n  const mapRef = useRef();\n\n  const setVisibleData = bounds => {\n    const { _southWest, _northEast } = bounds;\n\n    const visibleData = getBounds(geoJson, _southWest, _northEast);\n\n    setStore(visibleData);\n  };\n\n  const handleMoveEnd = e => {\n    setVisibleData(e.target.getBounds());\n  };\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const { latitude, longitude } = position.coords;\n\n      mapRef.current.leafletElement.flyTo(new L.LatLng(latitude, longitude));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setVisibleData(mapRef.current.leafletElement.getBounds());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return useMemo(\n    () => (\n      <Container\n        zoom={16}\n        zoomControl={false}\n        maxZoom={18}\n        minZoom={10}\n        center={init}\n        onmoveend={handleMoveEnd}\n        ref={mapRef}\n      >\n        <ZoomControl position=\"topright\" />\n        <WMSTileLayer\n          attribution={`Map data <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors Sam`}\n          url=\"https://wmts.nlsc.gov.tw/wmts/EMAP/default/EPSG:3857/{z}/{y}/{x}\"\n        />\n\n        <MarkerGroup />\n      </Container>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n};\n\nconst Container = styled(Map)`\n  height: 100vh;\n  z-index: 0;\n  transition: width 0.5s;\n`;\n","import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MaskProvider } from \"../store/maskProvider\";\nimport { TextProvider } from \"../store/textProvider\";\n\nimport Block from \"./block\";\n\nexport default () => {\n  const { store } = useContext(MaskProvider);\n  const { text } = useContext(TextProvider);\n  const [num, setNum] = useState(9);\n  let list = [];\n\n  const handleLoad = () => {\n    if (store.length > 10) setNum(prev => prev + 10);\n  };\n\n  const exist = item => {\n    const { name, address } = item.properties;\n\n    return name.indexOf(text) === -1 && address.indexOf(text) === -1;\n  };\n\n  store.forEach(item => {\n    if (exist(item)) {\n      return;\n    }\n\n    const [lng, lat] = item.geometry.coordinates;\n\n    list.push(\n      <Block\n        properties={item.properties}\n        coordinates={[lat, lng]}\n        key={item.properties.id}\n      />\n    );\n  });\n\n  const loadMoreButton =\n    num + 1 < list.length ? (\n      <Button onClick={handleLoad}>載入更多</Button>\n    ) : null;\n\n  return (\n    <Container>\n      {list.slice(0, num)}\n      {loadMoreButton}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: calc(100vh - 136px - 124px);\n  background: #ffffff 0% 0% no-repeat padding-box;\n  overflow: auto;\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    background-color: #cccccc;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n    background-color: #f5f5f5;\n  }\n\n  &::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n    background-color: #fff;\n  }\n`;\n\nconst Button = styled.div`\n  width: 100px;\n  height: 50px;\n  margin: auto;\n  line-height: 50px;\n  text-align: center;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport Info from \"./info\";\nimport Search from \"./search\";\nimport List from \"./list\";\nimport Button from \"./sidebarButton\";\nimport TextProvider from \"../store/textProvider\";\n\nexport default () => {\n  const [toggle, setToggle] = useState(true);\n\n  return (\n    <ThemeProvider theme={{ toggle }}>\n      <Container>\n        <Info />\n        <TextProvider>\n          <Search />\n          <List />\n        </TextProvider>\n        <Button setToggle={setToggle} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Container = styled.div`\n  @media (min-width: 360px) {\n    height: 100%;\n    width: 315px;\n    -webkit-box-shadow: 5px 0px 15px -8px rgba(0, 0, 0, 0.77);\n    -moz-box-shadow: 5px 0px 15px -8px rgba(0, 0, 0, 0.77);\n    box-shadow: 5px 0px 15px -8px rgba(0, 0, 0, 0.77);\n    z-index: 1;\n    background: #ffffff 0% 0% no-repeat padding-box;\n    display: grid;\n    grid-template-rows: 136px 124px auto;\n    transform: ${props =>\n      props.theme.toggle ? \"translateX(-100%)\" : \"translateX(0)\"};\n    position: fixed;\n    transition: transform 0.5s;\n  }\n\n  @media (min-width: 768px) {\n    position: relative;\n    transform: translateX(0);\n  }\n`;\n","import React from \"react\";\nimport MaskProvider from \"./maskProvider\";\nimport FilterProvider from \"./filterProvider\";\n\nexport default ({ children }) => {\n  return (\n    <FilterProvider>\n      <MaskProvider>{children}</MaskProvider>\n    </FilterProvider>\n  );\n};\n","import React from \"react\";\n\nimport Seo from \"../components/seo\";\nimport Map from \"../components/map\";\nimport Sidebar from \"../components/sidebar\";\nimport Provider from \"../store/provider\";\nimport Layout from \"../components/layout\";\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Provider>\n        <Seo title=\"Mask map\" />\n        <Sidebar />\n        <Map />\n      </Provider>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}